/// @file
#version 460 core

uniform mat4 V_mat;                                                             // View matrix.
uniform mat4 P_mat;                                                             // Projection matrix.
uniform float size_x;                                                           // Framebuffer size_x.
uniform float size_y;                                                           // Framebuffer size_y.
uniform float AR;                                                               // Framebuffer aspect ratio.

layout (points) in;                                                             // Input points.
layout (triangle_strip, max_vertices = 4) out;                                  // Output points.

layout(std430, binding = 5) buffer voxel_color
{
  vec4 color_SSBO[];                                                            // Voxel color SSBO.
};

layout(std430, binding = 0) buffer voxel_position
{
  vec4 position_SSBO[];                                                         // Voxel position SSBO.
};

out vec4  color;                                                                // Fragment color.
out vec2  quad;                                                                 // Billboard quad UV coordinates.
out float depth;                                                                // z-depth.

void main()
{
  uint i = gl_PrimitiveIDIn;                                                    // Central node index.        

  vec4 A;                                                                       // Billboard vertex "a" (in clip space).
  vec4 B;                                                                       // Billboard vertex "b" (in clip space).
  vec4 C;                                                                       // Billboard vertex "c" (in clip space).
  vec4 D;                                                                       // Billboard vertex "d" (in clip space).

  vec4 a;                                                                       // Billboard boundary "a" (in clip space).
  vec4 b;                                                                       // Billboard boundary "b" (in clip space).
  vec4 c;                                                                       // Billboard boundary "c" (in clip space).
  vec4 d;                                                                       // Billboard boundary "d" (in clip space).

  float s;                                                                      // Billboard thickness (in clip space).

  s = 0.02f;                                                                    // Setting billboard thickness (in clip space)...

  // COMPUTING BILLBOARD POSITION:                                                                 
  A = s*vec4(-0.5, +0.5, 0.0, 1.0);                                             // Setting billboard vertex "a" (in clip space)...
  B = s*vec4(-0.5, -0.5, 0.0, 1.0);                                             // Setting billboard vertex "b" (in clip space)...
  C = s*vec4(+0.5, +0.5, 0.0, 1.0);                                             // Setting billboard vertex "c" (in clip space)...
  D = s*vec4(+0.5, -0.5, 0.0, 1.0);                                             // Setting billboard vertex "d" (in clip space)...
    
  // COMPUTING BILLBOARD ASPECT RATIO:
  a = vec4(P_mat*(V_mat*vec4(position_SSBO[i].xyz, 1.0f) + A));                                 // Computing billboard boundary "a" (in clip space)...
  b = vec4(P_mat*(V_mat*vec4(position_SSBO[i].xyz, 1.0f) + B));                                 // Computing billboard boundary "b" (in clip space)...
  c = vec4(P_mat*(V_mat*vec4(position_SSBO[i].xyz, 1.0f) + C));                                 // Computing billboard boundary "c" (in clip space)...
  d = vec4(P_mat*(V_mat*vec4(position_SSBO[i].xyz, 1.0f) + D));                                 // Computing billboard boundary "d" (in clip space)...

  depth = vec4(P_mat*(V_mat*vec4(position_SSBO[i].xyz, 1.0f))).z;
          //vec4(P_mat*(V_mat*vec4(0.0f, 0.0f, 0.0f, 1.0f))).z;

  // GENERATING BILLBOARD VERTICES:
  color = color_SSBO[i];                                                        // Setting voxel color...  
  gl_Position = a;                                                              // Setting billboard vertex "a"...
  quad = vec2(-0.5, +0.5);                                                      // Setting quad vertex (in UV space)...
  EmitVertex();                                                                 // Emitting vertex...

  color = color_SSBO[i];                                                        // Setting voxel color...
  gl_Position = b;                                                              // Setting billboard vertex "b"...
  quad = vec2(-0.5, -0.5);                                                      // Setting quad vertex (in UV space)...
  EmitVertex();                                                                 // Emitting vertex...

  color = color_SSBO[i];                                                        // Setting voxel color...  
  gl_Position = c;                                                              // Setting billboard vertex "c"...
  quad = vec2(+0.5, +0.5);                                                      // Setting quad vertex (in UV space)...
  EmitVertex();                                                                 // Emitting vertex...

  color = color_SSBO[i];                                                        // Setting voxel color...  
  gl_Position = d;                                                              // Setting billboard vertex "d"...
  quad = vec2(+0.5, -0.5);                                                      // Setting quad vertex (in UV space)...
  EmitVertex();                                                                 // Emitting vertex...

  EndPrimitive();                                                               // Ending primitive...
}